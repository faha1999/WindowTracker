{"ast":null,"code":"var _jsxFileName = \"/home/faha/local-repo/journey-to-react/5. useEffect/2.stateandeffectpractice/src/WindowTracker.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WindowTracker() {\n  _s();\n\n  const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\n  React.useEffect(() => {\n    function watchWidth() {\n      console.log('Setting up...');\n      setWindowWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', watchWidth);\n    return function () {\n      console.log('Cleaning up...');\n      window.removeEventListener('resize', watchWidth);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"Window width: \", windowWidth]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n\n_s(WindowTracker, \"XPjwYFA2mnyOQTDQkTW889KQ99c=\");\n\n_c = WindowTracker;\n\nvar _c;\n\n$RefreshReg$(_c, \"WindowTracker\");","map":{"version":3,"sources":["/home/faha/local-repo/journey-to-react/5. useEffect/2.stateandeffectpractice/src/WindowTracker.js"],"names":["React","WindowTracker","windowWidth","setWindowWidth","useState","window","innerWidth","useEffect","watchWidth","console","log","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,KAAK,CAACI,QAAN,CAAeC,MAAM,CAACC,UAAtB,CAAtC;AAEAN,EAAAA,KAAK,CAACO,SAAN,CAAgB,MAAM;AACpB,aAASC,UAAT,GAAsB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAP,MAAAA,cAAc,CAACE,MAAM,CAACC,UAAR,CAAd;AACD;;AAEDD,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCH,UAAlC;AAEA,WAAO,YAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAL,MAAAA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCJ,UAArC;AACD,KAHD;AAID,GAZD,EAYG,EAZH;AAcA,sBAAO;AAAA,iCAAmBN,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlBuBD,a;;KAAAA,a","sourcesContent":["import React from 'react';\n\nexport default function WindowTracker() {\n  const [windowWidth, setWindowWidth] = React.useState(window.innerWidth);\n\n  React.useEffect(() => {\n    function watchWidth() {\n      console.log('Setting up...');\n      setWindowWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', watchWidth);\n\n    return function () {\n      console.log('Cleaning up...');\n      window.removeEventListener('resize', watchWidth);\n    };\n  }, []);\n\n  return <h1>Window width: {windowWidth}</h1>;\n}\n"]},"metadata":{},"sourceType":"module"}