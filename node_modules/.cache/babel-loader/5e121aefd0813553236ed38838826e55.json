{"ast":null,"code":"var _jsxFileName = \"/home/faha/local-repo/journey-to-react/5. useEffect/2.stateandeffectpractice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport WindowTracker from './WindowTracker';\nimport './css/style.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [show, setShow] = React.useState(true);\n\n  function toggle() {\n    setShow(prevShow => !prevShow);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: \"Toggle WindowTracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(WindowTracker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/faha/local-repo/journey-to-react/5. useEffect/2.stateandeffectpractice/src/App.js"],"names":["React","WindowTracker","App","show","setShow","useState","toggle","prevShow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,qBAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,IAAf,CAAxB;;AAEA,WAASC,MAAT,GAAkB;AAChBF,IAAAA,OAAO,CAAEG,QAAD,IAAc,CAACA,QAAhB,CAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAED,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,IAAI,iBAAI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAbuBD,G;;KAAAA,G","sourcesContent":["import React from 'react';\nimport WindowTracker from './WindowTracker';\nimport './css/style.min.css';\n\nexport default function App() {\n  const [show, setShow] = React.useState(true);\n\n  function toggle() {\n    setShow((prevShow) => !prevShow);\n  }\n\n  return (\n    <div className=\"container\">\n      <button onClick={toggle}>Toggle WindowTracker</button>\n      {show && <WindowTracker />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}